{"remainingRequest":"C:\\Users\\Oyegoke-Praise\\Documents\\Web design\\vue\\bakerihelm-hope - Copy\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Oyegoke-Praise\\Documents\\Web design\\vue\\bakerihelm-hope - Copy\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\Oyegoke-Praise\\Documents\\Web design\\vue\\bakerihelm-hope - Copy\\src\\store\\index.js","mtime":1634854927836},{"path":"C:\\Users\\Oyegoke-Praise\\Documents\\Web design\\vue\\bakerihelm-hope - Copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Oyegoke-Praise\\Documents\\Web design\\vue\\bakerihelm-hope - Copy\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlU3RvcmUsIHN0b3JlS2V5IH0gZnJvbSAndnVleCc7CmltcG9ydCBzZXJ2aWNlIGZyb20gIi4uL3NlcnZpY2UiOwppbXBvcnQgdGltZXpvbmUgZnJvbSAnLi4vdGltZXpvbmUnOwpleHBvcnQgZGVmYXVsdCBjcmVhdGVTdG9yZSh7CiAgc3RhdGU6IHsKICAgIHdlYXRoZXI6IHt9LAogICAgY291bnRyaWVzOiBbXSwKICAgIGRhdGFJc1JlY2lldmVkOiBmYWxzZQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBORVdfV0VBVEhFUjogZnVuY3Rpb24gTkVXX1dFQVRIRVIoc3RhdGUsIG1lc3NhZ2UpIHsKICAgICAgc3RhdGUud2VhdGhlciA9IG1lc3NhZ2U7CiAgICAgIHN0YXRlLmRhdGFJc1JlY2lldmVkID0gdHJ1ZTsKICAgIH0sCiAgICBVUERBVEVfV0VBVEhFUjogZnVuY3Rpb24gVVBEQVRFX1dFQVRIRVIoc3RhdGUpIHsKICAgICAgc2VydmljZS5nZXRXZWF0aGVyKCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBzdGF0ZS53ZWF0aGVyID0gcmVzcG9uc2UuZGF0YS5kYXRhWzBdOwogICAgICAgIHN0YXRlLmRhdGFJc1JlY2lldmVkID0gdHJ1ZTsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKCJ0aGVyZSB3YXMgYW4gZXJyb3I6IiwgZXJyb3IucmVzcG9uc2UpOwogICAgICAgIHN0YXRlLmRhdGFJc1JlY2lldmVkID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIEdFVF9DT1VOVFJJRVM6IGZ1bmN0aW9uIEdFVF9DT1VOVFJJRVMoc3RhdGUpIHsKICAgICAgdGltZXpvbmUudGltZVpvbmUoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHN0YXRlLmNvdW50cmllcyA9IHJlc3BvbnNlLmRhdGE7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICBjb25zb2xlLmxvZygndGltZSBlcnJvcjogJywgZXJyLnJlc3BvbnNlKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICB1cGRhdGVXZWF0aGVyOiBmdW5jdGlvbiB1cGRhdGVXZWF0aGVyKGNvbnRleHQpIHsKICAgICAgY29udGV4dC5jb21taXQoIlVQREFURV9XRUFUSEVSIik7CiAgICB9LAogICAgZ2V0Wm9uZXM6IGZ1bmN0aW9uIGdldFpvbmVzKGNvbnRleHQpIHsKICAgICAgY29udGV4dC5jb21taXQoIkdFVF9DT1VOVFJJRVMiKTsKICAgIH0KICB9LAogIG1vZHVsZXM6IHt9Cn0pOw=="},{"version":3,"sources":["C:/Users/Oyegoke-Praise/Documents/Web design/vue/bakerihelm-hope - Copy/src/store/index.js"],"names":["createStore","storeKey","service","timezone","state","weather","countries","dataIsRecieved","mutations","NEW_WEATHER","message","UPDATE_WEATHER","getWeather","then","response","data","console","log","catch","error","GET_COUNTRIES","timeZone","err","actions","updateWeather","context","commit","getZones","modules"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,MAAtC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,eAAeH,WAAW,CAAC;AACzBI,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,EADJ;AAELC,IAAAA,SAAS,EAAE,EAFN;AAGLC,IAAAA,cAAc,EAAE;AAHX,GADkB;AAMzBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WADS,uBACGL,KADH,EACUM,OADV,EACmB;AAC1BN,MAAAA,KAAK,CAACC,OAAN,GAAgBK,OAAhB;AACAN,MAAAA,KAAK,CAACG,cAAN,GAAuB,IAAvB;AACD,KAJQ;AAKTI,IAAAA,cALS,0BAKMP,KALN,EAKa;AACpBF,MAAAA,OAAO,CACNU,UADD,GAECC,IAFD,CAEM,UAAAC,QAAQ,EAAI;AAChBV,QAAAA,KAAK,CAACC,OAAN,GAAgBS,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmB,CAAnB,CAAhB;AACAX,QAAAA,KAAK,CAACG,cAAN,GAAuB,IAAvB;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,OAND,EAOCI,KAPD,CAOO,UAAAC,KAAK,EAAI;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,KAAK,CAACL,QAAzC;AACAV,QAAAA,KAAK,CAACG,cAAN,GAAuB,KAAvB;AACD,OAVD;AAWG,KAjBI;AAkBPa,IAAAA,aAlBO,yBAkBOhB,KAlBP,EAkBc;AACnBD,MAAAA,QAAQ,CACPkB,QADD,GAECR,IAFD,CAEO,UAAAC,QAAQ,EAAI;AACjBV,QAAAA,KAAK,CAACE,SAAN,GAAkBQ,QAAQ,CAACC,IAA3B;AACD,OAJD,EAKCG,KALD,CAKQ,UAAAI,GAAG,EAAI;AACbN,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BK,GAAG,CAACR,QAAhC;AACD,OAPD;AAQD;AA3BM,GANc;AAmCzBS,EAAAA,OAAO,EAAE;AACPC,IAAAA,aADO,yBACOC,OADP,EACgB;AACrBA,MAAAA,OAAO,CAACC,MAAR,CAAe,gBAAf;AACD,KAHM;AAIPC,IAAAA,QAJO,oBAIEF,OAJF,EAIW;AAChBA,MAAAA,OAAO,CAACC,MAAR,CAAe,eAAf;AACD;AANM,GAnCgB;AA2CzBE,EAAAA,OAAO,EAAE;AA3CgB,CAAD,CAA1B","sourcesContent":["import { createStore, storeKey } from 'vuex'\nimport service from \"../service\"\nimport timezone from '../timezone'\n\nexport default createStore({\n  state: {\n    weather: {},\n    countries: [],\n    dataIsRecieved: false\n  },\n  mutations: {\n    NEW_WEATHER(state, message) {\n      state.weather = message\n      state.dataIsRecieved = true\n    },\n    UPDATE_WEATHER(state) {\n      service\n      .getWeather()\n      .then(response => {\n        state.weather = response.data.data[0]\n        state.dataIsRecieved = true\n        console.log(response)\n      })\n      .catch(error => {\n        console.log(\"there was an error:\", error.response)\n        state.dataIsRecieved = false\n      })\n        },\n      GET_COUNTRIES(state) {\n        timezone\n        .timeZone()\n        .then( response => {\n          state.countries = response.data\n        })\n        .catch( err => {\n          console.log('time error: ', err.response)\n        })\n      },\n  },\n  actions: {\n    updateWeather(context) {\n      context.commit(\"UPDATE_WEATHER\")\n    },\n    getZones(context) {\n      context.commit(\"GET_COUNTRIES\")\n    }\n  },\n  modules: {\n  }\n})\n"]}]}